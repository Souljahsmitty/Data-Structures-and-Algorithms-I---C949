{"ast":null,"code":"import React,{createContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const TimerContext=/*#__PURE__*/createContext(null);// Ensure default value is set\nconst TimerProvider=_ref=>{let{children}=_ref;const initialTime=90*60;// 1 hour 30 minutes in seconds\nconst storedTime=sessionStorage.getItem(\"remainingTime\");const[timeLeft,setTimeLeft]=useState(storedTime?parseInt(storedTime):initialTime);useEffect(()=>{if(timeLeft<=0)return;// Stop when timer reaches 0\nconst timer=setInterval(()=>{setTimeLeft(prevTime=>{if(prevTime<=1){clearInterval(timer);sessionStorage.setItem(\"remainingTime\",\"0\");return 0;}const newTime=prevTime-1;sessionStorage.setItem(\"remainingTime\",newTime);return newTime;});},1000);return()=>clearInterval(timer);},[timeLeft]);// ✅ Function to Reset Timer\nconst resetTimer=()=>{setTimeLeft(initialTime);sessionStorage.setItem(\"remainingTime\",initialTime);};return/*#__PURE__*/_jsx(TimerContext.Provider,{value:{timeLeft,resetTimer},children:children});};export default TimerProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","TimerContext","TimerProvider","_ref","children","initialTime","storedTime","sessionStorage","getItem","timeLeft","setTimeLeft","parseInt","timer","setInterval","prevTime","clearInterval","setItem","newTime","resetTimer","Provider","value"],"sources":["C:/Users/AdamPCVR/Desktop/Backup of quiz website for/backup2-2-12-2025/Data Structures and Algorithms I - C949/src/TimerContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const TimerContext = createContext(null);  // Ensure default value is set\r\n\r\nconst TimerProvider = ({ children }) => {\r\n    const initialTime = 90 * 60; // 1 hour 30 minutes in seconds\r\n    const storedTime = sessionStorage.getItem(\"remainingTime\");\r\n    const [timeLeft, setTimeLeft] = useState(storedTime ? parseInt(storedTime) : initialTime);\r\n\r\n    useEffect(() => {\r\n        if (timeLeft <= 0) return; // Stop when timer reaches 0\r\n\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTime) => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(timer);\r\n                    sessionStorage.setItem(\"remainingTime\", \"0\");\r\n                    return 0; \r\n                }\r\n                const newTime = prevTime - 1;\r\n                sessionStorage.setItem(\"remainingTime\", newTime);\r\n                return newTime;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [timeLeft]);\r\n\r\n    // ✅ Function to Reset Timer\r\n    const resetTimer = () => {\r\n        setTimeLeft(initialTime);\r\n        sessionStorage.setItem(\"remainingTime\", initialTime);\r\n    };\r\n\r\n    return (\r\n        <TimerContext.Provider value={{ timeLeft, resetTimer }}>\r\n            {children}\r\n        </TimerContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TimerProvider;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,MAAO,MAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,IAAI,CAAC,CAAG;AAElD,KAAM,CAAAM,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAAAE,WAAW,CAAG,EAAE,CAAG,EAAE,CAAE;AAC7B,KAAM,CAAAC,UAAU,CAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,CAC1D,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAACS,UAAU,CAAGK,QAAQ,CAACL,UAAU,CAAC,CAAGD,WAAW,CAAC,CAEzFP,SAAS,CAAC,IAAM,CACZ,GAAIW,QAAQ,EAAI,CAAC,CAAE,OAAQ;AAE3B,KAAM,CAAAG,KAAK,CAAGC,WAAW,CAAC,IAAM,CAC5BH,WAAW,CAAEI,QAAQ,EAAK,CACtB,GAAIA,QAAQ,EAAI,CAAC,CAAE,CACfC,aAAa,CAACH,KAAK,CAAC,CACpBL,cAAc,CAACS,OAAO,CAAC,eAAe,CAAE,GAAG,CAAC,CAC5C,MAAO,EAAC,CACZ,CACA,KAAM,CAAAC,OAAO,CAAGH,QAAQ,CAAG,CAAC,CAC5BP,cAAc,CAACS,OAAO,CAAC,eAAe,CAAEC,OAAO,CAAC,CAChD,MAAO,CAAAA,OAAO,CAClB,CAAC,CAAC,CACN,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAMF,aAAa,CAACH,KAAK,CAAC,CACrC,CAAC,CAAE,CAACH,QAAQ,CAAC,CAAC,CAEd;AACA,KAAM,CAAAS,UAAU,CAAGA,CAAA,GAAM,CACrBR,WAAW,CAACL,WAAW,CAAC,CACxBE,cAAc,CAACS,OAAO,CAAC,eAAe,CAAEX,WAAW,CAAC,CACxD,CAAC,CAED,mBACIL,IAAA,CAACC,YAAY,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEX,QAAQ,CAAES,UAAW,CAAE,CAAAd,QAAA,CAClDA,QAAQ,CACU,CAAC,CAEhC,CAAC,CAED,cAAe,CAAAF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}