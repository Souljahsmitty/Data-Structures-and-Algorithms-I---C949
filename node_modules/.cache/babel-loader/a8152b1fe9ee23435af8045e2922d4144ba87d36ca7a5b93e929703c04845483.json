{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdamPCVR\\\\Desktop\\\\Data Structures and Algorithms I - C949\\\\src\\\\TimerContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimerContext = /*#__PURE__*/createContext(null); // Ensure default value is set\n\nconst TimerProvider = ({\n  children\n}) => {\n  _s();\n  const initialTime = 90 * 60; // 1 hour 30 minutes in seconds\n  const storedTime = sessionStorage.getItem(\"remainingTime\");\n  const [timeLeft, setTimeLeft] = useState(storedTime ? parseInt(storedTime) : initialTime);\n  useEffect(() => {\n    if (timeLeft <= 0) return; // Stop when timer reaches 0\n\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          sessionStorage.setItem(\"remainingTime\", \"0\");\n          return 0;\n        }\n        const newTime = prevTime - 1;\n        sessionStorage.setItem(\"remainingTime\", newTime);\n        return newTime;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  // ✅ Function to Reset Timer\n  const resetTimer = () => {\n    setTimeLeft(initialTime);\n    sessionStorage.setItem(\"remainingTime\", initialTime);\n  };\n  return /*#__PURE__*/_jsxDEV(TimerContext.Provider, {\n    value: {\n      timeLeft,\n      resetTimer\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(TimerProvider, \"SvqYD3p+2gU6BM40MZg9v8l9eV8=\");\n_c = TimerProvider;\nexport default TimerProvider;\nvar _c;\n$RefreshReg$(_c, \"TimerProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","TimerContext","TimerProvider","children","_s","initialTime","storedTime","sessionStorage","getItem","timeLeft","setTimeLeft","parseInt","timer","setInterval","prevTime","clearInterval","setItem","newTime","resetTimer","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AdamPCVR/Desktop/Data Structures and Algorithms I - C949/src/TimerContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const TimerContext = createContext(null);  // Ensure default value is set\r\n\r\nconst TimerProvider = ({ children }) => {\r\n    const initialTime = 90 * 60; // 1 hour 30 minutes in seconds\r\n    const storedTime = sessionStorage.getItem(\"remainingTime\");\r\n    const [timeLeft, setTimeLeft] = useState(storedTime ? parseInt(storedTime) : initialTime);\r\n\r\n    useEffect(() => {\r\n        if (timeLeft <= 0) return; // Stop when timer reaches 0\r\n\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTime) => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(timer);\r\n                    sessionStorage.setItem(\"remainingTime\", \"0\");\r\n                    return 0; \r\n                }\r\n                const newTime = prevTime - 1;\r\n                sessionStorage.setItem(\"remainingTime\", newTime);\r\n                return newTime;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [timeLeft]);\r\n\r\n    // ✅ Function to Reset Timer\r\n    const resetTimer = () => {\r\n        setTimeLeft(initialTime);\r\n        sessionStorage.setItem(\"remainingTime\", initialTime);\r\n    };\r\n\r\n    return (\r\n        <TimerContext.Provider value={{ timeLeft, resetTimer }}>\r\n            {children}\r\n        </TimerContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TimerProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;;AAElD,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC7B,MAAMC,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACS,UAAU,GAAGK,QAAQ,CAACL,UAAU,CAAC,GAAGD,WAAW,CAAC;EAEzFP,SAAS,CAAC,MAAM;IACZ,IAAIW,QAAQ,IAAI,CAAC,EAAE,OAAO,CAAC;;IAE3B,MAAMG,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BH,WAAW,CAAEI,QAAQ,IAAK;QACtB,IAAIA,QAAQ,IAAI,CAAC,EAAE;UACfC,aAAa,CAACH,KAAK,CAAC;UACpBL,cAAc,CAACS,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC;UAC5C,OAAO,CAAC;QACZ;QACA,MAAMC,OAAO,GAAGH,QAAQ,GAAG,CAAC;QAC5BP,cAAc,CAACS,OAAO,CAAC,eAAe,EAAEC,OAAO,CAAC;QAChD,OAAOA,OAAO;MAClB,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMF,aAAa,CAACH,KAAK,CAAC;EACrC,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBR,WAAW,CAACL,WAAW,CAAC;IACxBE,cAAc,CAACS,OAAO,CAAC,eAAe,EAAEX,WAAW,CAAC;EACxD,CAAC;EAED,oBACIL,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ;MAAES;IAAW,CAAE;IAAAf,QAAA,EAClDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACpB,EAAA,CAnCIF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}